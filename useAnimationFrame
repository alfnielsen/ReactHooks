import { useRef, useEffect } from "react"

const useAnimationFrame = (
  callback: (deltaTime: number, time: number) => void
) => {
  const requestRef = useRef<number>();
  const previousTimeRef = useRef<number>();
  const animate = (time: number) => {
    const previousTime = previousTimeRef.current;
    if (previousTime !== undefined) {
      const deltaTime = time - previousTime;
      callback(deltaTime, time);
    }
    previousTimeRef.current = time;
    requestRef.current = requestAnimationFrame(animate);
  };

  useEffect(() => {
    requestRef.current = requestAnimationFrame(animate);
    return () => {
      if (requestRef.current) {
        cancelAnimationFrame(requestRef.current);
      }
    };
  }); // Make sure the effect runs only once
};

export default useAnimationFrame;
